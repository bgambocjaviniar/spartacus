on:
  schedule:
    - cron:  '0 0 * * 1,4'
  workflow_dispatch:
    inputs:
      branch_to_sync:
        description: Branch to sync to the private repository
        default: develop
        required: true

name: Sync a branch to private PWA repo

jobs:
  sync_public_repo_to_private:
    name: Force sync a branch to the private repository with current git history
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch_to_sync }}
          fetch-depth: 0
      - name: Push a branch to the private repository
        run: | 
          git push -u https://${{ secrets.GHT_USER }}:${{ secrets.GHT_PRIVATE_REPO_TOKEN }}@github.tools.sap/cx-commerce-storefronts/${{ secrets.GHT_SPARTACUS_REPO}}.git ${{ github.event.inputs.branch_to_sync }} -f
      - name: Include remaining pipeline files to the private remote's branch
        env: 
        run: |
          echo "-----"
          echo "Clone repo"

          SONAR_PATH="./sonar-project.properties"

          git clone -b ${{ github.event.inputs.branch_to_sync }} https://${{ secrets.GHT_USER }}:${{ secrets.GHT_PRIVATE_REPO_TOKEN }}@github.tools.sap/cx-commerce-storefronts/${{ secrets.GHT_SPARTACUS_REPO }}.git
          cd ${{ secrets.GHT_SPARTACUS_REPO }}

          git config --global user.email ${{ secrets.GHT_EMAIL }}
          git config --global user.name ${{ secrets.GHT_USER }}

          echo "-----"
          echo "Get files other branch"

          git checkout origin/sap-pipeline-files -- .

          echo "-----"
          echo "Configure sonar"

          sed -i "s%sonar.branch.name=%sonar.branch.name=${{ github.event.inputs.branch_to_sync }}%gi" $SONAR_PATH

          echo "---------------------------------------------------------------------------------------------------------------------------"
          echo "Verify sonar.branch.name has been updated with the synched branch name"

          cat $SONAR_PATH

          if grep -Fq "sonar.branch.name=${{ github.event.inputs.branch_to_sync }}" $SONAR_PATH
          then
              echo "Branch name has successfully been added to the sonar.branch.name"
          else
              echo "Error. Branch name has NOT been added to the sonar.branch.name"
              exit 1
          fi

          echo "-----"
          echo "Include files to synced branch"

          git add .
          git commit -m "include remaining pipeline files"
          git push origin ${{ github.event.inputs.branch_to_sync }}
