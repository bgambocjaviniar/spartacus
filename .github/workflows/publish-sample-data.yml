on:
  workflow_dispatch:
    inputs:
      sample_branch:
        description: Publish spartacus sample data to standard Spartacus ccv2 repository
        default: release/2105/next
        required: true

name: Publish Spartacus Sample Data to Spartacus CCv2 repository
jobs:
  publish_sample_data: 
    name: Publishing Spartacus Sample Data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download the zip and tar files
        run: |
          curl -H "Authorization: token ${{ secrets.BRIAN_PAT }}" -L https://github.tools.sap/cx-commerce/spartacussampledata/archive/${{ github.event.inputs.sample_branch }}.zip --output spartacussampledata.zip
          curl -H "Authorization: token ${{ secrets.BRIAN_PAT }}" -L https://github.tools.sap/cx-commerce/spartacussampledata/archive/${{ github.event.inputs.sample_branch }}.tar.gz --output spartacussampledata.tar.gz
      - name: test release by tag
        id: vat
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.BRIAN_PUB_ONE }}
          script: |
            const response = await github.rest.repos.getReleaseByTag({
              owner: 'bgambocjaviniar',
              repo: 'npmrc-not-pickedup-with-yarn-for-private-repo-test',
              tag: 'anything'
            })

            console.log('abc', response);

            const { data: { id, upload_url }} = response;

            core.setOutput('id', id);
            core.setOutput('yes', upload_url);



            console.log('test test', process.env.yes);
            console.log(id);
            console.log('ok', upload_url);
      - name: vat test
        uses: actions/github-script@v5
        env:
          RELEASE_ID: ${{ steps.vat.outputs.id}}
          UPLOAD_URL: ${{ steps.vat.outputs.yes}}
        with:
          github-token: ${{ secrets.BRIAN_PUB_ONE }}
          script: |
            const fs = require('fs');

            const tarHeaders = { 'content-type': 'application/x-tar', 'content-length': contentLength(`${{ github.event.inputs.sample_branch }}`.tar.gz) };

            github.rest.repos.uploadReleaseAsset({
              url: ${{ steps.vat.outputs.yes}},
              headers: tarHeaders,
              name: `${{ github.event.inputs.sample_branch }}.zip`,
              file: fs.readFileSync(`./${{ github.event.inputs.sample_branch }}.zip`)
            });
 

      - name: Create Release / Update Release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.BRIAN_PUB_ONE }}
          script: |
            const response = await github.rest.repos.createRelease({
              owner: 'bgambocjaviniar',
              repo: 'npmrc-not-pickedup-with-yarn-for-private-repo-test',
              tag_name: 'anything'
            })

            const { data: { id, upload_url }} = response;

            core.setOutput('id', id);
            core.setOutput('yes', upload_url);

            console.log('test test', process.env.yes);
      - name: Create tag
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.BRIAN_PUB_ONE }}
          script: |
            github.rest.git.createRef({
              owner: 'bgambocjaviniar',
              repo: 'npmrc-not-pickedup-with-yarn-for-private-repo-test',
              ref: 'refs/tags/anything',
              sha: '441aa94e16d072cc8e589356050725aad6ff5954'
            })
